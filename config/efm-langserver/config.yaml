---
version: 2
root-markers:
  - RCS/
  - SCCS/
  - CVS/
  - .git/
  - .svn/
  - .hg/
  - .bzr/
  - _darcs/
  - .git
# command define
commands:
  - title: Reload
    command: :reload-config

  - title: Editor (notepad)
    os: windows
    command: notepad
    arguments:
      - '${FILENAME}'
  - title: Editor (gedit)
    os: linux
    command: gedit
    # Linux no method generic GUI editor open
    arguments:
      - '${FILENAME}'
  - title: Editor (default)
    os: darwin
    command: open
    arguments:
      - '-e'
      - '${FILENAME}'

  - title: Filer (explorer)
    os: windows
    command: cmd
    arguments:
      - '/c'
      - 'explorer /select,${FILENAME}'
  - title: Filer (Finder)
    os: darwin
    # Linux no method generic filer open
    command: open
    arguments:
      - '-R'
      - '${FILENAME}'

  - title: Browser (default)
    os: darwin
    # Windows no method generic browser open
    # Linux   no method generic browser open
    command: open
    arguments:
      - '-a'
      - 'Safari'
      - '${FILENAME}'

  - title: Open (system default)
    os: windows
    command: rundll32
    arguments:
      - 'url.dll,FileProtocolHandler'
      - '${FILENAME}'
  - title: Open (system default)
    os: linux
    command: xdg-open
    arguments:
      - '${FILENAME}'
  - title: Open (system default)
    os: darwin
    command: open
    arguments:
      - '${FILENAME}'

# linter,formatter setting
tools:
  cppcheck-lint: &cppcheck-lint
    prefix: cppcheck
    lint-command: 'cppcheck --quiet --force --enable=style --error-exitcode=1 ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c: %m'
    root-markers:
    - compile_commands.json

  vale-lint: &vale-lint
    prefix: vale
    lint-command: 'vale --relative --output line ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c:%*[^:]:%m'

  redpen-lint-core: &redpen-lint-core
    prefix: redpen
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l: Validation%t%*[a-z][%*[a-zA-Z]], %m at line:%r'
    root-markers:
      - redpen-conf.xml
      - redpen-conf-??.xml

  redpen-generic-lint: &redpen-generic-lint
    <<: *redpen-lint-core
    lint-command: 'redpen -l 9999 -r plain ${INPUT}'

  redpen-text-lint: &redpen-text-lint
    <<: *redpen-lint-core
    lint-command: 'redpen -l 9999 -f plain -r plain ${INPUT}'

  vint-lint: &vint-lint
    prefix: vint
    lint-command: 'vint --enable-neovim --style-problem ${INPUT}'
    lint-formats:
      - '%f:%l:%c: %m'

  nvcheck-lint-action: &nvcheck-lint-action
    prefix: nvcheck
    lint-command: 'nvcheck ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l: %m'
    root-markers:
    - dict.yml
    commands:
      - title: 'nvcheck fix'
        command: nvcheck
        arguments:
          - '-i'
          - '${INPUT}'

  markdownlint-lint-action: &markdownlint-lint-action
    prefix: markdownlint
    lint-command: 'markdownlint --stdin'  # markdownlint do not support --stdin-filename like option
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c MD%n/%*[^ ] %m'
      - '%f:%l MD%n/%*[^ ] %m'
    commands:
      - title: 'markdownlint fix'
        command: markdownlint
        arguments:
          - '--fix'
          - '${INPUT}'

  mdformat-action: &mdformat-action
    commands:
      - title: 'mdformat format'
        command: mdformat
        arguments:
          - '--number'
          - '--wrap'
          - 'keep'
          - '--end-of-line'
          - 'keep'
          - '${INPUT}'

  pandoc-markdown-format: &pandoc-markdown-format
    format-command: 'pandoc -f markdown -t gfm -sp --tab-stop=2'
    format-stdin: true

  pandoc-rst-format: &pandoc-rst-format
    format-command: 'pandoc -f rst -t rst -s --columns=79'
    format-stdin: true

  jsonlint-lint: &jsonlint-lint
    prefix: jsonlint
    lint-command: 'jsonlint -c'
    lint-stdin: true
    lint-formats:
      - 'line %l, col %c, found: %m'

  # not work
  # jq-lint: &jq-lint
  #   lint-command: 'jq'
  #   lint-stdin: true
  #   lint-offset: 1
  #   lint-formats:
  #     - '%m at line %l, column %c'

  jq-format: &jq-format
    format-command: 'jq .'
    format-stdin: true

  fixjson-format: &fixjson-format
    format-command: 'fixjson'
    format-stdin: true

  shellcheck-lint: &shellcheck-lint
    prefix: shellcheck
    lint-command: 'shellcheck -f gcc -x -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %t%*[^:]: %m [SC%n]'

  shfmt-format: &shfmt-format
    format-command: 'shfmt -ln bash -i 2 -bn -ci -sr -kp'
    format-stdin: true

  checkmake-lint: &checkmake-lint
    prefix: checkmake
    lint-command: 'checkmake'
    lint-stdin: true

  flake8-lint: &flake8-lint
    prefix: flake8
    lint-command: 'flake8 --stdin-display-name ${INPUT} -'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    root-markers:
      - setup.cfg
      - pyproject.toml
      - tox.ini
      - .flake8

  pylint-lint: &pylint-lint
    prefix: pylint
    lint-command: 'pylint --output-format=text --score=no --msg-template {path}:{line}:{column}:{C}:{msg} ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c:%t:%m'
    lint-offset-columns: 1
    lint-category-map:
      I: H
      R: I
      C: I
      W: W
      E: E
      F: E
    root-markers:
      - setup.cfg
      - pyproject.toml
      - .pylintrc

  mypy-lint: &mypy-lint
    prefix: mypy
    lint-command: 'mypy --show-column-numbers --strict --strict-equality'
    lint-formats:
      - '%f:%l:%c: %t%*[^:]: %m'
    root-markers:
      - setup.cfg
      - pyproject.toml
      - mypy.ini

  black-action: &black-action
    root-markers:
      - pyproject.toml
    commands:
      - title: 'black format'
        command: black
        arguments:
          - '--quiet'
          - '--safe'
          - '${INPUT}'

  yapf-action: &yapf-action
    root-markers:
      - setup.cfg
      - .style.yapf
    commands:
      - title: 'yapf format'
        command: yapf
        arguments:
          - '-i'
          - '${INPUT}'

  ruff-action: &ruff-action
    root-markers:
      - pyproject.toml
      - ruff.toml
      - .ruff.toml
    commands:
      - title: 'ruff format'
        command: ruff
        arguments:
          - 'format'
          - '${INPUT}'
      - title: 'ruff fix'
        command: ruff
        arguments:
          - 'check'
          - '--fix'
          - '--fix-only'
          - '--exit-zero'
          - '${INPUT}'

  pydocstyle-lint: &pydocstyle-lint
    prefix: pydocstyle
    lint-command: 'pydocstyle ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%I%f:%l %.%#:'
      - '%Z%*\sD%n: %m'
    root-markers:
      - setup.cfg
      - pyproject.toml
      - tox.ini
      - .pydocstyle
      - .pydocstyle.ini
      - .pydocstylerc
      - .pydocstylerc.ini

  rubocop-lint-format-action: &rubocop-lint-format-action
    prefix: rubocop
    lint-command: 'bundle exec rubocop --format emacs --force-exclusion --stdin ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    format-command: 'bundle exec rubocop -A -f quiet --stderr -s ${INPUT}'
    format-stdin: true
    root-markers:
      - Gemfile
      - Rakefile
      - .rubocop.yml
    commands:
      - title: 'rubocop fix(safe)'
        command: bundle
        arguments:
          - 'exec'
          - 'rubocop'
          - '--autocorrect'
          - '${INPUT}'
      - title: 'rubocop fix(all)'
        command: bundle
        arguments:
          - 'exec'
          - 'rubocop'
          - '--autocorrect-all'
          - '${INPUT}'

  rufo-format: &rufo-format
    format-command: 'bundle exec rufo ${INPUT}'
    format-stdin: false
    root-markers:
      - Gemfile
      - Rakefile
      - .rufo

  rbprettier-action: &rbprettier-action
    commands:
      - title: 'rbprettier format'
        command: bundle
        arguments:
          - 'exec'
          - 'rbprettier'
          - '--write'
          - '${INPUT}'

  yamllint-lint: &yamllint-lint
    prefix: yamllint
    lint-command: 'yamllint --strict --format parsable ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f:%l:%c: [%t%*[a-z]] %m'
    env:
      - 'PYTHONIOENCODING=UTF-8'

  actionlint-lint: &actionlint-lint
    prefix: actionlint
    lint-command: "bash -c \"[[ '${INPUT}' =~ \\\\.github/workflows/ ]]\" && actionlint -oneline -no-color -"
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    root-markers:
      - .github

  restructuredtext-lint-lint: &restructuredtext-lint-lint
    prefix: rstlint
    lint-command: 'rst-lint --encoding utf-8 --level warning --format text ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%t%*[A-Z] %f:%l %m'

  rstcheck-lint: &rstcheck-lint
    prefix: rstcheck
    lint-command: 'rstcheck --report warning -'
    lint-stdin: true
    lint-formats:
      - '%f:%l: (%t%*[^/]/%n) %m'

  textlint-lint-action: &textlint-lint-action
    prefix: textlint
    lint-command: 'npx --no-install textlint -f unix --no-color --stdin --stdin-filename ${INPUT}'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%trror/%r]'
      - '%f:%l:%c: 【%r】 %m'
      - '%E%f:%l:%c: %m'
      - '%Z%m [%trror/%r]'
      - '%C%m'
    root-markers:
      - package.json
      - .textlintrc
      - .textlintrc.js
      - .textlintrc.json
      - .textlintrc.yml
      - .textlintrc.yaml
    commands:
      - title: 'textlint fix'
        command: npx
        arguments:
          - '--no-install'
          - 'textlint'
          - '--fix'
          - '${INPUT}'

  eslint-lint-action: &eslint-lint-action
    prefix: eslint
    lint-command: 'npx --no-install eslint -f unix --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: true
    lint-stdin: true
    root-markers:
      - package.json
      - .eslintrc.js
      - .eslintrc.yaml
      - .eslintrc.yml
      - .eslintrc.json
    commands:
      - title: 'eslint fix'
        command: npx
        arguments:
          - '--no-install'
          - 'eslint'
          - '--fix'
          - '${INPUT}'

  stylelint-lint-action: &stylelint-lint-action
    prefix: stylelint
    lint-command: 'npx --no-install stylelint --formatter unix --stdin --stdin-filename ${INPUT}'
    lint-ignore-exit-code: false
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%t%*[a-z]]'
    root-markers:
      - package.json
      - stylelint.config.js
      - .stylelintrc.js
      - stylelint.config.mjs
      - .stylelintrc.mjs
      - stylelint.config.cjs
      - .stylelintrc.cjs
      - .stylelintrc.json
      - .stylelintrc.yml
      - .stylelintrc.yaml
      - .stylelintrc
    commands:
      - title: 'stylelint fix'
        command: npx
        arguments:
          - '--no-install'
          - 'stylelint'
          - '--fix'
          - '${INPUT}'

  htmllint-lint: &htmllint-lint
    prefix: htmllint
    lint-command: 'npx --no-install htmllint ${INPUT}'
    lint-stdin: false
    lint-formats:
      - '%f: line %l, col %c, %m'
    root-markers:
      - package.json
      - .htmllintrc

  buf-lint: &buf-lint
    prefix: buf
    lint-command: 'buf lint --path'
    root-markers:
    - buf.yaml

  prettier-action: &prettier-action
    commands:
      - title: 'prettier fix'
        command: npx
        arguments:
          - '--no-install'
          - 'prettier'
          - '--fix'
          - '--write'
          - '${INPUT}'
    require-marker: true
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml
      - prettier.config.js
      - prettier.config.cjs
      - prettier.config.mjs

  credo-lint: &credo-lint
    prefix: credo
    lint-command: 'mix credo suggest --format=flycheck --read-from-stdin ${INPUT}'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %t: %m'
      - '%f:%l: %t: %m'
    root-markers:
      - mix.lock
      - mix.exs

  hadolint-lint: &hadolint-lint
    prefix: hadolint
    lint-command: 'hadolint'
    lint-formats:
      - '%f:%l %m'

  cspell-lint: &cspell-lint
    prefix: cspell
    lint-command: 'npx --no-install cspell lint --no-progress --no-summary --no-color ${INPUT}'
    lint-formats:
      - '%f:%l:%c - %m'
      - '%f:%l:%c %m'
    root-markers:
      - package.json
      - .cspell.json
      - cspell.json
      - .cSpell.json
      - cSpell.json
      - cspell.config.js
      - cspell.config.cjs
      - cspell.config.json
      - cspell.config.yaml
      - cspell.config.yml
      - cspell.yaml
      - cspell.yml

  excitetranslate-hover: &excitetranslate-hover
    hover-command: 'excitetranslate'
    hover-stdin: true

# languages setting
languages:
  vim:
    - <<: *vint-lint

  markdown:
    - <<: *markdownlint-lint-action
    - <<: *textlint-lint-action
    - <<: *redpen-generic-lint
    - <<: *vale-lint
    - <<: *nvcheck-lint-action
    - <<: *stylelint-lint-action
    - <<: *prettier-action
    - <<: *pandoc-markdown-format
    - <<: *mdformat-action

  json:
    - <<: *jsonlint-lint
    - <<: *jq-format
    - <<: *fixjson-format
    - <<: *prettier-action

  json5:
    - <<: *fixjson-format
    - <<: *prettier-action

  text:
    - <<: *textlint-lint-action
    - <<: *redpen-text-lint
    - <<: *vale-lint
    - <<: *nvcheck-lint-action

  help:
    - <<: *textlint-lint-action
    - <<: *redpen-text-lint
    - <<: *vale-lint
    - <<: *nvcheck-lint-action

  cpp:
    - <<: *cppcheck-lint

  c:
    - <<: *cppcheck-lint

  sh:
    - <<: *shellcheck-lint
    - <<: *shfmt-format

  make:
    - <<: *checkmake-lint

  yaml:
    - <<: *yamllint-lint
    - <<: *prettier-action
    - <<: *actionlint-lint

  rst:
    - <<: *restructuredtext-lint-lint
    - <<: *rstcheck-lint
    - <<: *textlint-lint-action
    - <<: *redpen-generic-lint
    - <<: *vale-lint
    - <<: *nvcheck-lint-action
    - <<: *pandoc-rst-format

  asciidoc:
    - <<: *textlint-lint-action
    - <<: *redpen-generic-lint

  review:
    - <<: *textlint-lint-action
    - <<: *redpen-generic-lint

  javascript:
    - <<: *eslint-lint-action
    - <<: *prettier-action

  typescript:
    - <<: *eslint-lint-action
    - <<: *prettier-action

  css:
    - <<: *stylelint-lint-action
    - <<: *prettier-action

  scss:
    - <<: *stylelint-lint-action
    - <<: *prettier-action

  sass:
    - <<: *stylelint-lint-action

  less:
    - <<: *stylelint-lint-action

  sugarss:
    - <<: *stylelint-lint-action

  proto:
    - <<: *buf-lint

  python:
    - <<: *flake8-lint
    - <<: *pylint-lint
    - <<: *mypy-lint
    - <<: *black-action
    - <<: *yapf-action
    - <<: *pydocstyle-lint
    - <<: *ruff-action

  ruby:
    - <<: *rubocop-lint-format-action
    - <<: *rufo-format
    - <<: *rbprettier-action
    - <<: *prettier-action

  graphql:
    - <<: *prettier-action

  vue:
    - <<: *prettier-action

  html:
    - <<: *textlint-lint-action
    - <<: *htmllint-lint
    - <<: *stylelint-lint-action
    - <<: *prettier-action

  elixir:
    - <<: *credo-lint

  dockerfile:
    - <<: *hadolint-lint

  =:
    - <<: *excitetranslate-hover
    - <<: *cspell-lint
